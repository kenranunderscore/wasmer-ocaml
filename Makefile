ROOT:=$(dir $(abspath $(lastword $(MAKEFILE_LIST))))

OCAMLC?=ocamlc
OCAMLOPT?=ocamlopt
OCAMLDEP?=ocamldep

INCLUDES:= \
	-I $(OPAM_SWITCH_PREFIX)/lib/bigarray-compat \
	-I $(OPAM_SWITCH_PREFIX)/lib/bytes \
	-I $(OPAM_SWITCH_PREFIX)/lib/ctypes \
	-I $(OPAM_SWITCH_PREFIX)/lib/integers \
	-I $(OPAM_SWITCH_PREFIX)/lib/ocaml
OCAMLFLAGS+=-strict-sequence -strict-formats \
	-short-paths -keep-locs \
	-g

ifeq ($(SILENT),0)
SILENCER:=
else
SILENCER:=@
endif

all:
.PHONY: all


LIB_INTERFACE:=lib/Wasmer_ocaml.cmi lib/Wasmer_ocaml__WasmerBindings.cmi lib/Wasmer_ocaml__Util.cmi
TESTS:=test/instance/instance test/hello/hello

all: wasmer_ocaml $(TESTS)

wasmer_ocaml: lib/Wasmer_ocaml.cmxs lib/Wasmer_ocaml.cmxa
.PHONY: wasmer_ocaml

obj/lib/Wasmer_ocaml.ml: src/lib/wasmer_ocaml.ml
	@echo "Copying Wasmer_ocaml ml to the obj directory"
	$(SILENCER)cp src/lib/wasmer_ocaml.ml obj/lib/Wasmer_ocaml.ml
obj/lib/Wasmer_ocaml__WasmerBindings.ml: src/lib/wasmerBindings.ml
	@echo "Copying Wasmer_ocaml.WasmerBindings ml to the obj directory"
	$(SILENCER)cp src/lib/wasmerBindings.ml obj/lib/Wasmer_ocaml__WasmerBindings.ml
obj/lib/Wasmer_ocaml__WasmerBindings.mli: src/lib/wasmerBindings.mli
	@echo "Copying Wasmer_ocaml.WasmerBindings mli to the obj directory"
	$(SILENCER)cp src/lib/wasmerBindings.mli obj/lib/Wasmer_ocaml__WasmerBindings.mli
obj/lib/Wasmer_ocaml__Util.ml: src/lib/util.ml
	@echo "Copying Wasmer_ocaml.Util ml to the obj directory"
	$(SILENCER)cp src/lib/util.ml obj/lib/Wasmer_ocaml__Util.ml
obj/lib/Wasmer_ocaml__Util.mli: src/lib/util.mli
	@echo "Copying Wasmer_ocaml.Util mli to the obj directory"
	$(SILENCER)cp src/lib/util.mli obj/lib/Wasmer_ocaml__Util.mli

obj/lib/Wasmer_ocaml__WasmerBindings.cmi: obj/lib/Wasmer_ocaml__WasmerBindings.mli
	@echo "Compiling the Wasmer_ocaml.WasmerBindings cmi"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		-opaque \
		-I obj/lib \
		$(INCLUDES) \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml__WasmerBindings.cmi \
		obj/lib/Wasmer_ocaml__WasmerBindings.mli

obj/lib/Wasmer_ocaml__WasmerBindings.cmo: obj/lib/Wasmer_ocaml__WasmerBindings.ml obj/lib/Wasmer_ocaml__WasmerBindings.cmi
	@echo "Compiling the Wasmer_ocaml.WasmerBindings cmo"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		-opaque \
		-I obj/lib \
		$(INCLUDES) \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml__WasmerBindings.cmo \
		-c obj/lib/Wasmer_ocaml__WasmerBindings.ml

obj/lib/Wasmer_ocaml__WasmerBindings.cmx: obj/lib/Wasmer_ocaml__WasmerBindings.ml obj/lib/Wasmer_ocaml__WasmerBindings.cmi
	@echo "Compiling the Wasmer_ocaml.WasmerBindings cmx"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		-opaque \
		-I obj/lib \
		$(INCLUDES) \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml__WasmerBindings.cmx \
		-c obj/lib/Wasmer_ocaml__WasmerBindings.ml

obj/lib/Wasmer_ocaml__Util.cmi: obj/lib/Wasmer_ocaml__Util.mli obj/lib/Wasmer_ocaml__WasmerBindings.cmi
	@echo "Compiling the Wasmer_ocaml.Util cmi"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		-opaque \
		-I obj/lib \
		$(INCLUDES) \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml__Util.cmi \
		obj/lib/Wasmer_ocaml__Util.mli

obj/lib/Wasmer_ocaml__Util.cmo: obj/lib/Wasmer_ocaml__Util.ml obj/lib/Wasmer_ocaml__WasmerBindings.cmo
	@echo "Compiling the Wasmer_ocaml.Util cmo"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		-opaque \
		-I obj/lib \
		$(INCLUDES) \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml__Util.cmo \
		-c obj/lib/Wasmer_ocaml__Util.ml

obj/lib/Wasmer_ocaml__Util.cmx: obj/lib/Wasmer_ocaml__Util.ml obj/lib/Wasmer_ocaml__WasmerBindings.cmx
	@echo "Compiling the Wasmer_ocaml.Util cmx"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		-opaque \
		-I obj/lib \
		$(INCLUDES) \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml__Util.cmx \
		-c obj/lib/Wasmer_ocaml__Util.ml

obj/lib/Wasmer_ocaml.cmo: obj/lib/Wasmer_ocaml.ml obj/lib/Wasmer_ocaml__WasmerBindings.cmi obj/lib/Wasmer_ocaml__Util.cmi
	@echo "Compiling the Wasmer_ocaml cmo"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		-I obj/lib \
		-nopervasives -nostdlib \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml.cmo \
		-c obj/lib/Wasmer_ocaml.ml

obj/lib/Wasmer_ocaml.cmx: obj/lib/Wasmer_ocaml.ml obj/lib/Wasmer_ocaml__WasmerBindings.cmi obj/lib/Wasmer_ocaml__Util.cmi
	@echo "Compiling the Wasmer_ocaml cmx"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		-nopervasives -nostdlib \
		-I obj/lib \
		-no-alias-deps \
		-o obj/lib/Wasmer_ocaml.cmx \
		-c obj/lib/Wasmer_ocaml.ml

# Dummy placeholder (the cmi is automatically generated by either the cmx or the cmo)
obj/lib/Wasmer_ocaml.cmi: obj/lib/Wasmer_ocaml.cmx
lib/Wasmer_ocaml.cmi: obj/lib/Wasmer_ocaml.cmi
	@echo "Copying the Wasmer_ocaml cmi to lib"
	$(SILENCER)cp obj/lib/Wasmer_ocaml.cmi lib/Wasmer_ocaml.cmi
lib/Wasmer_ocaml__WasmerBindings.cmi: obj/lib/Wasmer_ocaml__WasmerBindings.cmi
	@echo "Copying the Wasmer_ocaml.WasmerBindings cmi to lib"
	$(SILENCER)cp obj/lib/Wasmer_ocaml__WasmerBindings.cmi lib/Wasmer_ocaml__WasmerBindings.cmi
lib/Wasmer_ocaml__Util.cmi: obj/lib/Wasmer_ocaml__Util.cmi
	@echo "Copying the Wasmer_ocaml.Util cmi to lib"
	$(SILENCER)cp obj/lib/Wasmer_ocaml__Util.cmi lib/Wasmer_ocaml__Util.cmi

obj/lib/wasmerBindings.o: src/lib/wasmerBindings.c
	@echo "Compiling WasmerBindings object file with CFLAGS=$(CFLAGS)"
	$(SILENCER)$(CC) $(CFLAGS) -c src/lib/wasmerBindings.c -o obj/lib/wasmerBindings.o

lib/Wasmer_ocaml.cma: obj/lib/wasmerBindings.o obj/lib/Wasmer_ocaml.cmo obj/lib/Wasmer_ocaml__WasmerBindings.cmo obj/lib/Wasmer_ocaml__Util.cmo
	@echo "Compiling Wasmer_ocaml cma"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		-a \
		-o lib/Wasmer_ocaml.cma \
		obj/lib/wasmerBindings.o \
		-cclib -lwasmer -ccopt -L$(ROOT)lib \
		obj/lib/Wasmer_ocaml.cmo \
		obj/lib/Wasmer_ocaml__WasmerBindings.cmo \
		obj/lib/Wasmer_ocaml__Util.cmo

lib/Wasmer_ocaml.cmxa: obj/lib/wasmerBindings.o obj/lib/Wasmer_ocaml.cmx obj/lib/Wasmer_ocaml__WasmerBindings.cmx obj/lib/Wasmer_ocaml__Util.cmx
	@echo "Compiling Wasmer_ocaml cmxa"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		-a \
		-o lib/Wasmer_ocaml.cmxa \
		obj/lib/wasmerBindings.o \
		-cclib -lwasmer -ccopt -L$(ROOT)lib \
		obj/lib/Wasmer_ocaml.cmx \
		obj/lib/Wasmer_ocaml__WasmerBindings.cmx \
		obj/lib/Wasmer_ocaml__Util.cmx

lib/Wasmer_ocaml.cmxs: lib/Wasmer_ocaml.cmxa
	@echo "Compiling Wasmer_ocaml cmxs"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) -shared -linkall \
		-I obj/lib \
		-o lib/Wasmer_ocaml.cmxs \
		lib/Wasmer_ocaml.cmxa


obj/test/hello/hello.cmo: $(LIB_INTERFACE) src/test/hello/hello.ml
	@echo "Compiling test 'hello' cmo"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		$(INCLUDES) \
		-I lib \
		-no-alias-deps \
		-o obj/test/hello/hello.cmo \
		-c src/test/hello/hello.ml
obj/test/hello/hello.cmx: $(LIB_INTERFACE) src/test/hello/hello.ml
	@echo "Compiling test 'hello' cmx"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		$(INCLUDES) \
		-I lib \
		-no-alias-deps \
		-o obj/test/hello/hello.cmx \
		-c src/test/hello/hello.ml

test/hello/hello.wasm: src/test/hello/hello.wasm
	@echo "Copying hello.wasm to the 'hello' test directory"
	$(SILENCER)cp src/test/hello/hello.wasm test/hello/hello.wasm

test/hello/hello: lib/Wasmer_ocaml.cmxa obj/test/hello/hello.cmx test/hello/hello.wasm
	@echo "Compiling test 'hello'"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		$(INCLUDES) \
		-I lib \
		-o test/hello/hello \
		$(OPAM_SWITCH_PREFIX)/lib/bigarray-compat/bigarray_compat.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/integers/integers.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ctypes/ctypes.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ocaml/unix.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ocaml/threads/threads.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ctypes/ctypes-foreign.cmxa \
		lib/Wasmer_ocaml.cmxa \
		obj/test/hello/hello.cmx

obj/test/instance/instance.cmo: $(LIB_INTERFACE) src/test/instance/instance.ml
	@echo "Compiling test 'instance' cmo"
	$(SILENCER)$(OCAMLC) \
		$(OCAMLFLAGS) \
		$(INCLUDES) \
		-I lib \
		-no-alias-deps \
		-o obj/test/instance/instance.cmo \
		-c src/test/instance/instance.ml
obj/test/instance/instance.cmx: $(LIB_INTERFACE) src/test/instance/instance.ml
	@echo "Compiling test 'instance' cmx"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		$(INCLUDES) \
		-I lib \
		-no-alias-deps \
		-o obj/test/instance/instance.cmx \
		-c src/test/instance/instance.ml

test/instance/instance: lib/Wasmer_ocaml.cmxa obj/test/instance/instance.cmx
	@echo "Compiling test 'instance'"
	$(SILENCER)$(OCAMLOPT) \
		$(OCAMLFLAGS) \
		$(INCLUDES) \
		-I lib \
		-o test/instance/instance \
		$(OPAM_SWITCH_PREFIX)/lib/bigarray-compat/bigarray_compat.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/integers/integers.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ctypes/ctypes.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ocaml/unix.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ocaml/threads/threads.cmxa \
		$(OPAM_SWITCH_PREFIX)/lib/ctypes/ctypes-foreign.cmxa \
		lib/Wasmer_ocaml.cmxa \
		obj/test/instance/instance.cmx

# OCaml bug: the sigaltstack can't be changed by an external library
# or the program will crash on exit
# https://github.com/ocaml/ocaml/issues/11489
# Should be fixed by OCaml 4.14 (#11496) and OCaml 5.0
check: $(TESTS)
	@echo "Reminder: segmentation fault errors when exiting are known and an OCaml bug."
	-echo; echo Test: instance; cd test; cd instance; ./instance
	-echo; echo Test: hello; cd test; cd hello; ./hello

clean:
# Output
	$(RM) obj/lib/*
	$(SILENCER)touch obj/lib/.gitkeep
	$(RM) lib/Wasmer_ocaml*
	$(SILENCER)touch lib/.gitkeep
	
# Tests
	$(RM) obj/test/hello/* obj/test/instance/*
	$(SILENCER)touch obj/test/hello/.gitkeep obj/test/instance/.gitkeep
	$(RM) $(TESTS)
